h1 Cases
= render partial: 'shared/mpp/supervisors_cases_links' if current_user.can?(:ensure_mpp_user)
.usa.usa-width-one-whole
  = form_tag(search_sba_analyst_cases_path)
  form.usa-search.usa-search-small style="float: right; width: 90%"
    .usa-width-two-thirds
      #filter-table
        ul.usa-accordion style="max-width: 100%"
          li
            button#filter1.usa-accordion-button aria-controls="filter-1" aria-expanded="false"
              | Filter
            #filter-1.usa-accordion-content style="background-color: #f1f1f1"
              .usa-width-one-whole
                .usa-width-one-third
                  p
                    b Program
                  ul.usa-unstyled-list
                    li
                      <input type="checkbox" name="option[program][eight_a]" id="eight_a">
                      = label_tag(:eight_a, "8(a) Business Development")

                    li
                      <input type="checkbox" name="option[program][hubzone]" id="hubzone">
                      = label_tag(:hubzone, "HUBzone")
                    li
                      <input type="checkbox" name="option[program][mpp]" id="mpp">
                      = label_tag(:mpp, "MPP")

                    li
                      <input type="checkbox" name="option[program][wosb]" id="wosb">
                      = label_tag(:wosb, "WOSB")
                    li
                      <input type="checkbox" name="option[program][edwosb]" id="edwosb">
                      = label_tag(:edwosb, "EDWOSB")

                .usa-width-one-third
                  p
                    b Review Type
                  ul.usa-unstyled-list
                    li
                      <input type="checkbox" name="option[review_type][initial_review]" id="initial_review">
                      = label_tag(:initial_review, "Initial Review")
                    li
                      <input type="checkbox" name="option[review_type][annual_review]" id="annual_review">
                      = label_tag(:annual_review, "Annual Review")
                    li
                      <input type="checkbox" name="option[review_type][continuing_eligibility]" id="continuing_eligibility">
                      = label_tag(:continuing_eligibility, "Continuing Eligibility")

                .usa-width-one-third
                  p
                    b Status
                  ul.usa-unstyled-list
                    li
                      <input type="checkbox" name="option[status][recommendation][assigned_in_progress]" id="under_review">
                      = label_tag(:under_review, "Under Review")
                    li
                      <input type="checkbox" name="option[status][recommendation][recommend_ineligible]" id="proposed_ineligible">
                      = label_tag(:proposed_ineligible, "Proposed Ineligible")
                    li
                      <input type="checkbox" name="option[status][recommendation][recommend_eligible]" id="proposed_eligible">
                      = label_tag(:proposed_eligible, "Proposed Eligible")
                    li
                      <input type="checkbox" name="option[status][determination][sba_approved]" id="sba_approved">
                      = label_tag(:sba_approved, "SBA Approved")
                    li
                      <input type="checkbox" name="option[status][determination][decline_ineligible]" id="declined">
                      = label_tag(:declined, "Declined")

              .usa-width-one-whole
                br
                .usa-width-two-thirds
                  p
                    b Date Range
                  .usa-date-of-birth
                    .usa-form-group.usa-form-group-month
                      = label_tag(:from_month, "Month")
                      input#date_of_birth_1.usa-form-control aria-describedby="dobHint" max="12" min="1" name="option[submitted_date][from_month]" pattern="0?[1-9]|1[012]" type="number" value="" /
                    .usa-form-group.usa-form-group-day
                      = label_tag(:from_day, "Day")
                      input#date_of_birth_2.usa-form-control aria-describedby="dobHint" max="31" min="1" name="option[submitted_date][from_day]" pattern="0?[1-9]|1[0-9]|2[0-9]|3[01]" type="number" value="" /
                    .usa-form-group.usa-form-group-year
                      = label_tag(:from_year, "Year")
                      input#date_of_birth_3.usa-form-control aria-describedby="dobHint" max="2050" min="1900" name="option[submitted_date][from_year]" pattern="[0-9]{4}" type="number" value=""
                  .usa-date-of-birth
                    .usa-form-group.usa-form-group-month style="width: 10px"
                      label
                        br
                        ' to

                  .usa-date-of-birth
                    .usa-form-group.usa-form-group-month
                      = label_tag(:to_month, "Month")
                      input#date_of_birth_1.usa-form-control aria-describedby="dobHint" max="12" min="1" name="option[submitted_date][to_month]" pattern="0?[1-9]|1[012]" type="number" value="" /
                    .usa-form-group.usa-form-group-day
                      = label_tag(:to_day, "Day")
                      input#date_of_birth_2.usa-form-control aria-describedby="dobHint" max="31" min="1" name="option[submitted_date][to_day]" pattern="0?[1-9]|1[0-9]|2[0-9]|3[01]" type="number" value="" /
                    .usa-form-group.usa-form-group-year
                      = label_tag(:to_year, "Year")
                      input#date_of_birth_3.usa-form-control aria-describedby="dobHint" max="2050" min="1900" name="option[submitted_date][to_year]" pattern="[0-9]{4}" type="number" value=""

                .usa-width-one-third
                  .ui-widget
                    p style="margin-top: 29px"
                      b Owner
                    input.autocomplete type="text" name="option[owner][owner]" placeholder="Type Name (Autofill)"

              .usa-width-one-whole
                br
                .usa-width-one-fourth#clear-filters
                  = submit_tag "Clear filters"

    .usa-width-one-third
      form.usa-search.usa-search-small
        div role="search"
          .usa-width-two-thirds
            div role="search"
              input#search-field-small.search-all-cases name="query" type="search" /
          .usa-width-one-third
            button#search-all-cases-button type="submit"
              span.usa-search-submit-text Search

div.overflow-auto
  #table-search
    table.searchable class="usa-table-borderless"
      thead
        tr
          th#business_name scope="col" Business name
          th#duns scope="col" DUNS
          th#program scope="col" Program
          th#review_type_humanized scope="col" Review type
          th#date_submitted scope="col" Submitted
          th#owner scope="col" Owner
          th#reviewer scope="col" Current reviewer
          th#status_humanize scope="col" Certificate Status
          th scope="col" Recommendation & Determination

      - unless @cases.blank?
        - @cases.each do |my_case|
          tr
            td
              - if can?(:start_review, current_user) && my_case["program"] != "EIGHT_A"

                - if (can?(:ensure_wosb_user, current_user) && (my_case["program"] == "WOSB" || my_case["program"] == "EDWOSB")) || (can?(:ensure_mpp_user, current_user) && my_case["program"] == "MPP")
                  = link_to my_case["business_name"], new_sba_analyst_sba_application_review_path(Certificate.find(my_case["certificate_id"]).current_application)
                - else
                  = my_case["business_name"]
              - else
                = my_case["business_name"]
            td = link_to my_case["duns"], sba_analyst_dashboard_show_path(enc: $encryptor.encrypt("duns_number=#{my_case["duns"]}&tax_identifier=#{my_case["ein"]}"))
            td = Certificate::HUMANIZE_NAME[my_case["program"]]
            td = my_case["review_type_humanized"]
            td = my_case["submitted_date"]
            td = my_case["owner"]
            td = my_case["reviewer"]
            td = my_case["status"]
            td
              - if my_case["recommandation"] && my_case["recommandation"] != 'Determination Made'
                = my_case["recommendation_humanized"]
              - else
                = my_case["determination_humanized"]
      - else
        tr
          td colspan=(9)
            | No results found.

.usa-width-one-whole
  = will_paginate(@cases) if !@cases.empty?



  = javascript_tag do
    == "var availableTags = #{User.analysts_and_supervisors.map{|u| u.name }};"
    == "var initialSearch = '#{current_user.program_search}';"
    == "var sort = '#{@session[:direction]}';"

javascript:
  $(document).ready(function () {

    $('#filter1').click(function () {
      if ($('#filter1').attr('aria-expanded') === "true") {
        $("#filter1").attr("aria-expanded", "false");
      } else {
        $("#filter1").attr("aria-expanded", "true");
      }
    });

    $('#clear-filters').click(function(event){
      event.preventDefault();

      $("input[type=checkbox]").each(function () {
        $(this).prop("checked", false);
      });
      $("input[type=text]").each(function () {
        $(this).val("");
      });
      $("input[type=number]").each(function () {
        $(this).val("");
      });
    });
    $( ".autocomplete" ).autocomplete({
      source: availableTags
    });
    $( ".search-all-cases").val(initialSearch);
    $("th#date_submitted").addClass(sort);
    $("th#date_submitted").click(function(event){
      var direction;
      if( $(this).hasClass("desc") ){
        direction = "asc";
        $(this).removeClass("desc").addClass("asc")
      }
      else if($(this).hasClass("asc")){
        direction = "desc";
        $(this).removeClass("asc").addClass("desc")
      }
      else{
        direction = "desc";
        $(this).removeClass("desc").addClass("asc")
      }
      var col;
      col = $(this).attr("id");
      $.ajax({
        type: "POST",
        url: "/sba_analyst/cases/search",
        data: { "direction" : direction, "column" : "date_submitted" },
        dataType: 'json',
        success: function(data, textStatus) {
          location.reload();
        },
        error: function(data, textStatus) {
          location.reload();
        }
      });
    });
  });
