version: '3.4'
volumes:
  public:
networks:
  sba-app:
    driver: bridge
services:
  postgres:
    image: postgres:9.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
  mailcatcher:
    image: schickling/mailcatcher:latest
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.3
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  redis:
    image: redis:latest
  sba-app:
    build:
      context: .
      target: rails
      args:
      - BUNDLE_GEMINABOX__SBA__ONE__NET
      cache_from:
      - certify/sba-app:latest
    image: certify/sba-app:latest
    links:
      - postgres
      - redis
      - elasticsearch
      - mailcatcher
    external_links:
      - notification-api_notification-api1
    ports:
      - '3000:3000'
    env_file:
    - ./docker/docker.env
    volumes:
    - public:/app/public
    environment:
      RAILS_ENV: "docker"
      RAILS_ADMIN_ENV: "docker"
      RAKE_DB_CLEAR: "true"
      RAKE_DB_CREATE: "true"
      RAKE_DB_SEED: "true"
      RAKE_DB_SEED_FAIL_FORWARD: "true"
      MAJOR_VERSION: ${MAJOR_VERSION}
      MINOR_VERSION: ${MINOR_VERSION}
      PATCH_VERSION: ${PATCH_VERSION}
      BUILD_VERSION: ${GIT_COMMIT}
      RDS_URL: postgres
      RDS_DB_NAME: postgres
      RDS_USER: postgres
      RDS_PASSWORD: postgres
      RDS_ADMIN_USER: postgres
      RDS_ADMIN_PASSWORD: postgres
      SESSION_REDIS_URL: redis://redis/1
      RESQUE_REDIS_URL: redis://redis/2
    command: >
      /bin/bash -c "
        function waitfor() {
          while ! nc -z $$1 $$2;
          do
            echo waiting for $$1;
            sleep 3;
          done;
          echo Connected to $$1!;
        }

        waitfor mailcatcher 1025;
        waitfor postgres 5432;
        waitfor redis 6379;
        waitfor elasticsearch 9200;

        start-rails.sh;
        echo Rails process exited, stopping container.;
      "
  sba-app-resque-scheduler:
    # Uses the same image as sba-app, but overrides the CMD at runtime
    image: certify/sba-app:latest
    links:
      - postgres
      - redis
    external_links:
      - notification-api_notification-api1
    volumes:
    - public:/app/public
    environment:
      RAILS_ENV: "docker"
      MAJOR_VERSION: ${MAJOR_VERSION}
      MINOR_VERSION: ${MINOR_VERSION}
      PATCH_VERSION: ${PATCH_VERSION}
      BUILD_VERSION: ${GIT_COMMIT}
      RDS_URL: postgres
      RDS_DB_NAME: postgres
      RDS_USER: postgres
      RDS_PASSWORD: postgres
      RDS_ADMIN_USER: postgres
      RDS_ADMIN_PASSWORD: postgres
      SESSION_REDIS_URL: redis://redis/1
      RESQUE_REDIS_URL: redis://redis/2
      RAKE_ASSETS_PRECOMPILE: "false"
      RAKE_DB_CREATE: "false"
      RAKE_DB_MIGRATE: "false"
    command: >
      /bin/bash -c "
        function waitfor() {
          while ! nc -z $$1 $$2;
          do
            echo waiting for $$1;
            sleep 3;
          done;
          echo Connected to $$1!;
        }

        waitfor postgres 5432;
        waitfor redis 6379;

        start-resque-scheduler.sh;
        echo Rails process exited, stopping container.;
      "
  sba-app-resque-worker:
    # Uses the same image as sba-app, but overrides the CMD at runtime
    image: certify/sba-app:latest
    links:
      - postgres
      - redis
    external_links:
      - notification-api_notification-api1
    volumes:
    - public:/app/public
    environment:
      RAILS_ENV: docker
      MAJOR_VERSION: ${MAJOR_VERSION}
      MINOR_VERSION: ${MINOR_VERSION}
      PATCH_VERSION: ${PATCH_VERSION}
      BUILD_VERSION: ${GIT_COMMIT}
      RDS_URL: postgres
      RDS_DB_NAME: postgres
      RDS_USER: postgres
      RDS_PASSWORD: postgres
      RDS_ADMIN_USER: postgres
      RDS_ADMIN_PASSWORD: postgres
      SESSION_REDIS_URL: redis://redis/1
      RESQUE_REDIS_URL: redis://redis/2
      RAKE_ASSETS_PRECOMPILE: "false"
      RAKE_DB_CREATE: "false"
      RAKE_DB_MIGRATE: "false"
    command: >
      /bin/bash -c "
        function waitfor() {
          while ! nc -z $$1 $$2;
          do
            echo waiting for $$1;
            sleep 3;
          done;
          echo Connected to $$1!;
        }

        waitfor redis 6379;
        waitfor sba-app 3000;

        start-resque-worker.sh;
        echo Rails process exited, stopping container.;
       "
